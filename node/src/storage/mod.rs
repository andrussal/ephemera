//! # Database
//!
//! It supports SqlLite and RocksDB.

use crate::block::types::block::Block;
use crate::utilities::crypto::Certificate;

#[cfg(feature = "rocksdb_storage")]
pub(crate) mod rocksdb;

#[cfg(feature = "sqlite_storage")]
pub(crate) mod sqlite;

pub(crate) trait EphemeraDatabase: Send {
    /// Returns block by its id. Block ids are generated by Ephemera
    fn get_block_by_id(&self, block_id: String) -> anyhow::Result<Option<Block>>;

    /// Returns last committed/finalised block.
    fn get_last_block(&self) -> anyhow::Result<Option<Block>>;

    /// Returns block by its height
    fn get_block_by_height(&self, height: u64) -> anyhow::Result<Option<Block>>;

    fn get_block_certificates(&self, block_id: String) -> anyhow::Result<Option<Vec<Certificate>>>;

    /// Stores block and its signatures
    fn store_block(&mut self, block: &Block, certificates: Vec<Certificate>) -> anyhow::Result<()>;
}
