use actix_web::{get, HttpResponse, Responder, web};

use crate::api::EphemeraExternalApi;

#[utoipa::path(
    responses(
        (status = 200, description = "GET block by id")),
        params(("id", description = "Block id generated by the Ephemera")),
)]
#[get("/ephemera/block/{id}")]
pub(crate) async fn block_by_id(
    id: web::Path<String>,
    api: web::Data<EphemeraExternalApi>,
) -> impl Responder {
    log::debug!("GET /ephemera/block/{id}", );

    match api.get_block_by_id(id.into_inner()).await {
        Ok(Some(block)) => HttpResponse::Ok().json(block),
        Ok(_) => HttpResponse::NotFound().finish(),
        Err(err) => {
            log::error!("Failed to get block by id: {err}", );
            HttpResponse::InternalServerError().finish()
        }
    }
}

#[utoipa::path(
    responses(
        (status = 200, description = "GET block by label")),
            params(("label", description = "Block label provided by application or generated by the Ephemera")),
    )]
#[get("/ephemera/block/label/{label}")]
pub(crate) async fn block_by_label(
    label: web::Path<String>,
    api: web::Data<EphemeraExternalApi>,
) -> impl Responder {
    log::debug!("GET /ephemera/block/label/{label}");

    match api.get_block_by_label(label.as_str()).await {
        Ok(Some(block)) => HttpResponse::Ok().json(block),
        Ok(_) => HttpResponse::NotFound().finish(),
        Err(err) => {
            log::error!("Failed to get block by label: {err}",);
            HttpResponse::InternalServerError().finish()
        }
    }
}
